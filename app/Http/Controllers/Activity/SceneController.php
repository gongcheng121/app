<?php
/**
 * Created by PhpStorm.
 * User: koala
 * Date: 20/01/16
 * Time: 下午 03:59
 */

namespace App\Http\Controllers\Activity;

use App\Commands\SendPacket;
use App\Http\Controllers\BaseController;

use App\Model\LotteryCount;
use App\Model\LotteryResult;
use App\Model\LuckMoney;
use App\Model\PackOrder;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Queue;
use Illuminate\Support\Facades\Session;

class SceneController  extends BaseController
{

    const MAX_TIME=2;
    public function __construct(Request $request)
    {
        parent::__construct(); // TODO: Change the autogenerated stub

        $this->middleware('wechat');
    }

    public function getIndex(Request $request){
        if(!$request->key){dd();}
        $key = $request->key;
        $wechat_user_info = Session::get('wechat_user_'.$key);
        $openid = $wechat_user_info['openid'];
//        dd($openid);
//        Cache::forget('Lotter_info'.$openid);
        $lotter_info = Cache::get('Lotter_info'.$openid,function() use($openid){
            Cache::put('Lotter_info'.$openid,['count'=>0],Carbon::now()->addDay(1)->diffInMinutes());
            return ['count'=>0];
        });
//dd($lotter_info);
        $count = self::MAX_TIME-$lotter_info['count'];
        $fromuser = $openid;
        return view('scene/index',compact('count','key','fromuser','lotter_info'));
    }


    public function postLottery(Request $request){

        $openid = $request->openid;
        $key = $request->key;
        $return = ['error'=>0,'msg'=>''];
        $lotter_info = Cache::get('Lotter_info'.$openid);
        $return['count']=self::MAX_TIME-$lotter_info['count'];
        if(self::MAX_TIME-$lotter_info['count']>0){
            $lotter_info['count']+=1;
            $prize_list  = [
                '1'=>'50元红包',
                '2'=>'20元红包',
                '3'=>'1元红包',
                '4'=>'2元红包',
                '5'=>'加油卡',
                '6'=>'加湿器',
                '7'=>'菜籽油',
                '8'=>'定制笔记本',
                '9'=>'三胖蛋瓜子',
                '10'=>'金冠园健康礼券',
                '11'=>'懒到家火锅50元低值券',
                '0'=>'谢谢参与'
            ];
            $prize_arr = array(
                '21' => array('id'=>21,'prize'=>$prize_list[1],'v'=>1,          'count'=>1),
                '22' => array('id'=>22,'prize'=>$prize_list[2],'v'=>1,          'count'=>1),
                '23' => array('id'=>23,'prize'=>$prize_list[3],'v'=>500,         'count'=>60),
                '24' => array('id'=>24,'prize'=>$prize_list[4],'v'=>150,        'count'=>150),
                '25' => array('id'=>25,'prize'=>$prize_list[5],'v'=>10,         'count'=>10),
                '26' => array('id'=>26,'prize'=>$prize_list[6],'v'=>6,          'count'=>6),
                '27' => array('id'=>27,'prize'=>$prize_list[7],'v'=>100,        'count'=>100),
                '28' => array('id'=>28,'prize'=>$prize_list[8],'v'=>30,         'count'=>30),
                '29' => array('id'=>29,'prize'=>$prize_list[9],'v'=>30,         'count'=>30),
                '30' => array('id'=>30,'prize'=>$prize_list[10],'v'=>30,        'count'=>80),
                '31' => array('id'=>31,'prize'=>$prize_list[11],'v'=>30,        'count'=>100),
                '32' => array('id'=>32,'prize'=>$prize_list[0],'v'=>100,        'count'=>100000000000),
            );
            if(isset($lotter_info['prize']) && count($lotter_info['prize'])>=2){
                $prize_arr = array(
                    '32' => array('id'=>32,'prize'=>$prize_list[0],'v'=>1000,   'count'=>10000000),
                );
            }
            $count = LotteryCount::all()->toArray();
            foreach ($prize_arr as $key => $val) {
                $arr[$val['id']] = $val['v'];
                $c[$val['id']] = $val['count'];
            }
            if(sizeof($count)>1){
                foreach($count as $k=>$v){
                    if(isset($c[$v['prizeId']])) {
                        $p = $c[$v['prizeId']]-$v['count'];
                        if($p<=0){
                            unset($arr[$v['prizeId']]);
                        }
                    }
                }
            }

            $rid = $this->getRand($arr);

            if(in_array($rid,[21,22,23,24])){
                $amount[21]=5000;
                $amount[22]=2000;
                $amount[23]=100;
                $amount[24]=200;
                $packInfo['openid'] = $request->openid;
                $packInfo['total_amount'] = $amount[$rid];
                self::sendPack($packInfo);
            }
            $res = $prize_arr[$rid]; //中奖项
            $time =time();
            LotteryResult::create(['openid'=>$request->openid,'lottery'=>$res['prize'],'add_time'=>$time,'prize_id'=>$res['id']]);
            $Lottery_count = LotteryCount::firstOrCreate(['prizeId'=>$res['id'],'prize'=>$res['prize']]);
            $Lottery_count->increment('count',1);
            if($rid!=32){
                $lotter_info['prize'][]=$res['prize'];
                $return['msg']='恭喜您获得'.$res['prize'];
            }
            $return['msg']=$res['prize'];
            $return['prize']=$res['prize'];
            Cache::put('Lotter_info'.$openid,$lotter_info,Carbon::now()->addDay(1)->diffInMinutes());
        }else{
            $return['error']=1;
            $return['count']=self::MAX_TIME-$lotter_info['count'];
            $return['msg']='超出游戏次数';
        }
        return response()->json($return);

    }


    public function getPrizeList(Request $request){
        $result = LotteryResult::with('wechatMember')->OrderBy('key','DESC')->whereIn('prize_id',
            [21,22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,])->get();
        return view('scene/result',compact('result'));
    }


    public static function sendPack($packInfo){
        $luckyMoneyData = [
            'send_name'=>'亚心网',
            're_openid'=>$packInfo['openid'],
            'total_amount'=>$packInfo['total_amount'],
            'total_num'=>1,
            'wishing'=>'亚心网送红包',
            'act_name'=>'亚心网送红包',
            'remark'=>'亚心网送红包',//
            'key' => '7cb551a19e58ed5524f2be99f251c405',
        ];
        $luckyMoney = LuckMoney::create($luckyMoneyData);
        //TODO　step 2 生成订单信息
        $order_id = date('Ymd').substr(implode(NULL, array_map('ord', str_split(substr(uniqid(), 7, 10), 1))), 0, 10);
        $PackOrderData = [
            'mch_billno'=>'1259516401'.$order_id,
            'mch_id' => '1259516401',
            're_openid' =>$packInfo['openid'],
            'amount' => $packInfo['total_amount'],
            'status' => 0,
            'add_time'  => time(),
            'real_ip' => self::getRealIp(),
            'key' => '7cb551a19e58ed5524f2be99f251c405',
            'lucky_id'=>$luckyMoney->id,
        ];
        $order= PackOrder::create($PackOrderData);
        Queue::push(new SendPacket($order->id));
    }

    function getRand($proArr) {
        $result = '';
        //概率数组的总概率精度
        $proSum = array_sum($proArr);
        //概率数组循环
        foreach ($proArr as $key => $proCur) {
            $randNum = mt_rand(1, $proSum);
            if ($randNum <= $proCur) {
                $result = $key;
                break;
            } else {
                $proSum -= $proCur;
            }
        }
        unset ($proArr);

        return $result;
    }
    public static function getRealIp() {
        $ip = "Unknown";
        if (isset($_SERVER["HTTP_X_REAL_IP"]) && !empty($_SERVER["HTTP_X_REAL_IP"])) {
            $ip = $_SERVER["HTTP_X_REAL_IP"];
        }
        elseif (isset($HTTP_SERVER_VARS["HTTP_X_FORWARDED_FOR"]) && !empty($HTTP_SERVER_VARS["HTTP_X_FORWARDED_FOR"])) {
            $ip = $HTTP_SERVER_VARS["HTTP_X_FORWARDED_FOR"];
        }
        elseif (isset($HTTP_SERVER_VARS["HTTP_CLIENT_IP"]) && !empty($HTTP_SERVER_VARS["HTTP_CLIENT_IP"])) {
            $ip = $HTTP_SERVER_VARS["HTTP_CLIENT_IP"];
        }
        elseif (isset($HTTP_SERVER_VARS["REMOTE_ADDR"]) && !empty($HTTP_SERVER_VARS["REMOTE_ADDR"])) {
            $ip = $HTTP_SERVER_VARS["REMOTE_ADDR"];
        }
        elseif (getenv("HTTP_X_FORWARDED_FOR")) {
            $ip = getenv("HTTP_X_FORWARDED_FOR");
        }
        elseif (getenv("HTTP_CLIENT_IP")) {
            $ip = getenv("HTTP_CLIENT_IP");
        }
        elseif (getenv("REMOTE_ADDR")) {
            $ip = getenv("REMOTE_ADDR");
        }
        if( $ip == 'Unknown'){
            // 调试信息
            $ip = '127.0.0.1';
//            self:: debugErrorSendWx('获取不到ip地址', $_SERVER );
        }
        return $ip;
    }
}
