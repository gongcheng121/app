<?php namespace App\Http\Controllers\Activity;

use App\Http\Controllers\BaseController;
use App\Http\Requests;
use App\Http\Controllers\Controller;

use App\Model\GalleryPollLog;
use App\Model\GalleryUserInfo;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Validator;
use Overtrue\Wechat\Media;

class GalleryController extends BaseController {
    public function __construct(Request $request)
    {
        parent::__construct(); // TODO: Change the autogenerated stub
        $this->middleware('wechat');
    }


    /*
     * 显示首页
     * */
    public function getIndex(Request $request){
        $key = $request->key;
        $wechat_user_info = Session::get('wechat_user_'.$key);
        $openid = $wechat_user_info['openid'];
        $count  = GalleryUserInfo::with('WechatMember')->where('openid',$openid)->count();

        return view('activity.gallery.index',compact('key','count'));
    }

    public function getList(Request $request,GalleryUserInfo $galleryUserInfo){
        $key = $request->key;
        $wechat_user_info = Session::get('wechat_user_'.$key);
$can_poll=true;
        if(Carbon::now()->diffInDays(Carbon::create(null,null,12))==0)
        {
            $can_poll=true;
        }
        $gallerys =  $galleryUserInfo->orderBy('id','desc')->paginate(10);
        return view('activity.gallery.list',compact('key','gallerys','request','can_poll'));
    }

    public function getTest(Request $request){

    }
    /*
     * 投票
     */
    public function postPoll(Request $request){
        $key = $request->key;
        $id = $request->id;
        $wechat_user_info = Session::get('wechat_user_'.$key);
        $return = ['error'=>'','data'=>'投票成功'];
        $data['openid'] = $wechat_user_info['openid'];
        $data['id'] = $id;
        $count  = GalleryPollLog::where('id',$id)->where('openid',$data['openid'])->count();
        if($count<3){
            $result = GalleryPollLog::create($data);
            GalleryUserInfo::where('id',$id)->increment('count');
        }else{
            $return['error']='1';
            $return['data']='超出投票次数';
        }
        return response()->json($return);

    }

    public function postJoin(Request $request){
        $key = $request->key;
        $return = ['error'=>'','data'=>$request->data];
        $wechat_user_info = Session::get('wechat_user_'.$key);
        $openid = $wechat_user_info['openid'];
        $v = Validator::make($request->data,[
            'user_name' => 'required|min:2',
            'mobile' => 'required',
            'wish_message' => 'required',
            'images' => 'required',
        ]);
        if ($v->fails())
        {
            $return['error']=$v->errors();
        }else{
            $data = $request->data;
            $data['openid'] = $openid;
            $galleryUserInfo  = GalleryUserInfo::create($data);
        }
        return response()->json($return);
    }

    public function postDownload(Request $request){
        $key = $request->key;
        $wechat_info  = Cache::get('wechat_info_'.$key,function() use($key){
            try{
                $expiresAt = Carbon::now()->addDay(1);
                $wechatInfo =WechatInfo::where('key','=',$key)->firstOrFail();
                Cache::add('wechat_info_'.$key,$wechatInfo,$expiresAt);
                return  $wechatInfo;
            }catch (ModelNotFoundException $e){
                return response('Please contact the Administrator',403);
            }
        });
        $appId = $wechat_info['appid'];
        $secret = $wechat_info['secret'];
        $media   = new Media($appId, $secret);
        $mediaId = $request->mediaId;

        $thumb_path = 'upload/wechat_media/'.date('ymd').'/';
        if(!file_exists($thumb_path)){
            Storage::disk('public')->makeDirectory($thumb_path);
        };
        $name = $mediaId.'.jpg';
        $filename = $thumb_path.$name;
        $media->download($mediaId, $filename);
        return response()->json(['src'=>$filename]);
    }

}
